# -*- coding: utf-8 -*-
"""atr65_Lab 8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qezq15WOD7HGCTiHplJRKLbYl0pGVXvx

# Diamond Company Analytics Challenge

**Time:** 35 minutes

**Scenario:** You are the new data analyst at a prestigious diamond company. The CEO has called an urgent meeting and needs answers to critical business questions about the inventory.

**Your Mission:** Analyze the diamond inventory data and provide insights to guide strategic decisions.
"""

import polars as pl

# Load the diamonds dataset
print("Loading diamonds dataset...")
df = pl.read_csv('https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/diamond.csv')
print("Dataset loaded successfully!")

head = df.head(5)
print(head)

"""## Section 1: Initial Inventory Assessment (5 minutes)

The CEO walks in: "Before we dive into specifics, I need to understand what we're working with. Give me the basics about our inventory database."

### Question 1: "How extensive is our inventory database?"

The CEO needs to know the scale of data you're analyzing.
"""

# Your code here:

import polars as pl

# Load the diamonds dataset
print("Loading diamonds dataset...")
df = pl.read_csv('https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/diamond.csv')
print("Dataset loaded successfully!")

# Display the number of rows and columns
print(f"The inventory database contains {df.height} rows and {df.width} columns.")

"""### Question 2: "What information do we track about each diamond?"

List all the characteristics we record.
"""

# Your code here:
print("The characteristics tracked for each diamond are:")
for column in df.columns:
  print(f"- {column}")

"""### Question 3: "When I look at one line in this database, what am I looking at?"

Explain in business terms: Each row in the database represents a diamond in the inventory––including diamond weight, cut, color, clarity, polish, symmetry, a  report certifying its characteristics, and its price.

**Your answer:** Each row represents:

## Section 2: Strategic Business Questions (20 minutes)

The CEO continues: "Now let's get to the important questions. Our board meeting is tomorrow and I need concrete numbers."

### Question 4: "We're considering expanding our storage facilities. How many total carats do we have in inventory? I need to know if our vaults can handle the weight."

Think about what measurement would help answer this.
"""

# Your code here:

# Calculate the total carats
total_carats = df['Carat Weight'].sum()

# Display the total carats
print(f"The total number of carats in the inventory is: {total_carats:.2f}")

"""### Question 5: "Our new marketing campaign claims we have 'the widest variety of cuts in the industry.' Can you verify this?"

The CEO wants to know about variety, not quantity.
"""

# Your code here:
unique_cuts = df['Cut'].unique()
print("The different cuts in the inventory are:")
for cut in unique_cuts:
  print(f"- {cut}")

total_unique_cuts = len(unique_cuts)
print(f"The total number of unique cuts in the inventory is: {total_unique_cuts}")

"""### Question 6: "I'm meeting with our insurance company. They need to know our price exposure - what's our most and least valuable diamond?"
"""

# Your code here:
min_price = df['Price'].min()
max_price = df['Price'].max()
print(f"The most valuable diamond is: {max_price}")
print(f"The least valuable diamond is: {min_price}")

"""### Question 7: "Which color grades should we focus on in our premium line? I need typical prices across our color spectrum."

The CEO wants to understand pricing patterns.
"""

# Your code here:
average_price_per_color = df.group_by('Color').agg(pl.col('Price').mean().alias('Average Price'))
print("Typical prices across color grades:")
print(average_price_per_color)

"""**Reflection:** After analyzing by color, how has your view of the data changed? What does each row in your result represent now?

**Your answer:** New grain = Each row in the data now represents a summary for a specific color, showing the average price of diamonds of that color across the entire inventory. Thus, my view is now on greater color trends overall instead of specific diamonds.

## Section 3: Advanced Strategic Analysis (10 minutes)

The CEO leans forward: "These next questions will shape our strategy for next year."

### Question 8: "We're thinking of specializing in certain clarity grades. For our investor deck, I need a complete breakdown showing: how many diamonds we have in each clarity grade, their typical price, and the total carats we're holding for each grade."
"""

# Your code here:
clarity_summary = df.group_by('Clarity').agg(
    pl.col('Price').mean().alias('Average Price'),
    pl.col('Carat Weight').sum().alias('Total Carats')
)
print("Clarity Grade Breakdown:")
print(clarity_summary)

"""### Question 9: "My luxury competitor claims they have the best prices for every cut-color combination. Show me our pricing structure across these combinations - I want to see where we're competitive."
"""

# Your code here:
average_price_by_cut_color = df.group_by(['Cut', 'Color']).agg(
    pl.col('Price').mean().alias('Average Price')
)
print("Pricing structure across Cut-Color combinations:")
print(average_price_by_cut_color)

"""**Reflection:** How specific is your analysis now? What level of detail does each row represent?

**Your answer:** New grain = Much more specific, each row now represents cut, color and average price for each cut and color of diamond

### Question 10: URGENT - "Our biggest client is interested in purchasing entire inventory segments. They asked: 'Which color-cut combinations represent your highest total inventory value?' Show me the top 5 most valuable inventory segments by total worth, and include how many diamonds are in each segment."

This is critical for tomorrow's negotiation.
"""

# Your code here:

# Calculate the total value and count for each color-cut combination
inventory_value_by_cut_color = df.group_by(['Color', 'Cut']).agg(
    pl.col('Price').sum().alias('Total Value'),
    pl.len().alias('Number of Diamonds')
).sort('Total Value', descending=True)

# Display the top 5 most valuable segments
print("Top 5 most valuable inventory segments by total worth:")
print(inventory_value_by_cut_color.head(5))

"""## Debrief

Congratulations! You've just completed your first day as the diamond company's data analyst.

Remember:
- CEOs speak in business language, not technical terms
- Always understand what each row represents before analyzing
- Business questions contain clues about which operations to use
"""



